example_prompt = """Input: {input}
Output: {output}"""


io_prompt = """Generate an output corresponding to the given input. Each output is generated by applying the same transformation to the respective inputs.

{examples}
Input: {test_input}
Output:"""


io_prompt_with_format = """Generate an output corresponding to the given input. Each output is generated by applying the same transformation to the respective inputs.

{examples}

Your input:
Input: {test_input}

Please format your output as follows:

Output: <Your output>"""


rule_prompt = """Generate a rule that maps the following inputs to their corresponding outputs.

{examples}

Please format your rule as follows:

Rule: <Your rule>"""


python_rule_prompt = """Generate a Python function `fn` that maps the following inputs to their corresponding outputs.

{examples}

Please format your Python function as follows:

```python
def fn(x):
    # Your code here
```"""


rule_to_python_prompt = """You are an expert Python programmer. Write a Python function `fn` for the following rule. The input is a nested list that represents a 2D grid of integers. The output is also a nested list that represents a 2D grid of integers.

Rule: {rule}"""


feedback_prompt = """Input: {input}
Expected output: {target}
Actual output: {output}"""


rule_with_feedback_prompt = """Your rule: {rule}

Applying your rule to the following inputs does not produce the expected outputs.

{feedback}

Generate a new rule that maps the given inputs to their corresponding outputs. Please format your rule as follows:

Rule: <Your rule>"""


rule_to_output_prompt = """Generate an output for the given input based on the following rule. The input is a 2D grid of integers. The output is also a 2D grid of integers.

Rule: {rule}

Input: {test_input}
Output:"""


rule_to_output_prompt_with_format = """Generate an output for the given input based on the following rule. The input is a 2D grid of integers. The output is also a 2D grid of integers.

Rule: {rule}

Your input:
Input: {test_input}

Please format your output as follows:

Output: <Your output>"""
